import { AngularAppOptions } from '@teambit/angular-apps';
import { BrowserOptions, DevServerOptions } from '@teambit/angular-common';
import type { WebpackConfigTransformer } from '@teambit/webpack';
import { container } from 'webpack';

const { ModuleFederationPlugin } = container;

const DEV_PUBLIC_PATH = 'http://localhost:60001/';

export const moduleFederationAngularAppTransformer: WebpackConfigTransformer = (
	configMutator,
	_context,
) => {
	configMutator.addPlugin(
		new ModuleFederationPlugin({
			/**
			 * the following is the path used by the host app, to load this app:
			 * angular_app@http://localhost:60001/remoteEntry2.js
			 */
			name: 'angular_app',
			/* this file is generated by the mf webpack plugin */
			filename: 'remoteEntry2.js',
			exposes: {
				'./angularApp': './src/app/app.module.ts',
			},
		})
	);
	configMutator.raw.output = configMutator.raw.output || {};
	configMutator.raw.output.publicPath = DEV_PUBLIC_PATH;
	return configMutator;
};

const angularOptions: BrowserOptions & DevServerOptions = {
	main: './src/main.ts',
	polyfills: './src/polyfills.ts',
	index: './src/index.html',
	tsConfig: './tsconfig.app.json',
	assets: ['./src/assets'],
	styles: ['./src/styles.scss'],
};

export const MyAngularAppOptions: AngularAppOptions = {
	/**
	 * Name of the app in Bit CLI.
	 */
	name: 'angular-app',

	/**
	 * Angular options for `bit build`
	 */
	angularBuildOptions: angularOptions,

	/**
	 * Angular options for `bit run`
	 */
	angularServeOptions: angularOptions,

	/**
	  * Folder containing the main file of your application
	  */
	sourceRoot: './src',

	portRange: [60001, 60001],

	webpackBuildTransformers: [moduleFederationAngularAppTransformer],
};

export default MyAngularAppOptions;